<Window x:Class="ZippyClip.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZippyClip"
        xmlns:items="clr-namespace:ZippyClip.Items"
        xmlns:commands="clr-namespace:ZippyClip.Commands"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Name="TheWindow"
        Title="ZippyClip" Height="450" Width="450" Loaded="Window_Loaded"
        Topmost="True"
        Closing="Window_Closing"
        KeyDown="Window_KeyDown"
        MouseDown="TheWindow_MouseDown"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        >
    <Window.Resources>
        <SolidColorBrush x:Key="IndexColor">#606060</SolidColorBrush>

        <DataTemplate DataType="{x:Type items:ImageItem}">
            <Border Margin="3" Padding="6" Background="Lavender" CornerRadius="6" Height="64">
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" Text="{Binding ListIndex}" Foreground="#606060" FontWeight="Bold" Padding="1,0,4,0" VerticalAlignment="Top" />
                    <Image DockPanel.Dock="Left" Source="{Binding Image}" VerticalAlignment="Top" />
                    <Button Height="16"
                            Width="16"
                            CommandParameter="{Binding}"
                            Command="{Binding Path=DeleteItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            DockPanel.Dock="Right"
                            VerticalAlignment="Top">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Resources/delete.png"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type items:TextItem}">
            <Border Margin="3" Padding="6" MaxHeight="150" Background="Lavender" CornerRadius="6">
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Top" Text="{Binding ListIndex}" Foreground="{StaticResource IndexColor}" FontWeight="Bold" Padding="1,0,4,0" />
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Top" Text="{Binding Text}" TextWrapping="Wrap" />
                    <Button Height="16" 
                            Width="16" 
                            CommandParameter="{Binding}" 
                            Command="{Binding Path=DeleteItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            DockPanel.Dock="Right" 
                            VerticalAlignment="Top">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Resources/delete.png"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type items:UriItem}">
            <Border Margin="3" Padding="6" MaxHeight="150" Background="Lavender" CornerRadius="6">
                <DockPanel LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Top" Text="{Binding ListIndex}" Foreground="{StaticResource IndexColor}" FontWeight="Bold" Padding="1,0,4,0" />
                    <TextBlock DockPanel.Dock="Left">
                  <Hyperlink NavigateUri="{Binding Uri}" RequestNavigate="Hyperlink_RequestNavigate">
                    <TextBlock Text="{Binding Uri}" />
                  </Hyperlink>
                </TextBlock>
                    <Button Height="16"
                        Width="16"
                        CommandParameter="{Binding}"
                        Command="{Binding Path=DeleteItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                        DockPanel.Dock="Right"
                        VerticalAlignment="Top">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Resources/delete.png"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </DockPanel>
            </Border>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="VisibilityConverter1" />

        <ToolTip x:Key="TrayToolTip">
            <TextBlock>Show ZippyClip</TextBlock>
        </ToolTip>

        <commands:ShowMessageCommand x:Key="WakeUpCommand" />
        <Storyboard x:Key="ShowSettingsStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="settingsBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="170"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="settingsBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideSettingsStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="settingsBorder">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="settingsBorder">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <!-- Window content -->
    <Border CornerRadius="6" Padding="4,16,4,4" Background="LightGray">
        <Grid>
            <ListBox Name="listClipboardItems" 
                 ItemsSource="{Binding Path=ClipboardHistory}" 
                 SelectedItem="{Binding Path=SelectedItem}" 
                 MouseDoubleClick="ListBox_MouseDoubleClick" 
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                 ScrollViewer.CanContentScroll="False"
                 Background="GhostWhite" BorderBrush="{x:Null}" BorderThickness="0" d:IsHidden="True">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <EventSetter Event="MouseEnter" Handler="ListBoxItem_MouseEnter" />
                        <EventSetter Event="MouseLeave" Handler="ListBoxItem_MouseLeave" />
                        <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform x:Name="transform" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <!-- Empty list placeholder -->
            <TextBlock Text="Add items to the list by copying text or images in other applications" 
                       Visibility="{Binding Path=HistoryIsEmpty, Converter={StaticResource VisibilityConverter1}}"
                       Grid.Column="0" 
                       Grid.Row="0" 
                       Margin="4"
                       Foreground="{StaticResource IndexColor}"
                       FontSize="14" d:IsHidden="True" />

            <!-- Preview popup -->
            <Popup Name="PreviewPopup" PlacementTarget="{Binding ElementName=TheWindow}" Placement="Right" 
                   PopupAnimation="Slide" AllowsTransparency="True" d:IsHidden="True">
                <Border Background="LightGray" CornerRadius="6" Padding="4">
                    <StackPanel>
                        <Image Name="PreviewImage" />
                        <TextBlock Name="PreviewText" />
                    </StackPanel>
                </Border>
            </Popup>

            <!-- Taskbar icon also accepts the following attributes if needed:
            ContextMenu="{StaticResource TrayMenu}"
            TrayPopup="{StaticResource TrayStatusPopup}"
            -->
            <tb:TaskbarIcon x:Name="myNotifyIcon"
                    Visibility="Visible"
                    ToolTipText="Show ZippyClip"
                    IconSource="/Resources/appicon.ico"
                    MenuActivation="LeftOrRightClick"
                    PopupActivation="DoubleClick"
                    LeftClickCommand="{StaticResource WakeUpCommand}"
                    LeftClickCommandParameter="{Binding ElementName=TheWindow}"
                    TrayToolTip="{StaticResource TrayToolTip}" d:IsHidden="True">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Click="PauseMenuItem_Click"
                                  Header="Pause/Unpause" />
                        <MenuItem Click="SettingsMenuItem_Click" Header="Settings" />
                        <Separator />
                        <MenuItem Click="QuitMenuItem_Click" Header="Quit" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <!-- Settings panel -->
            <Border x:Name="settingsBorder" BorderThickness="1" BorderBrush="DarkGray" Background="LightGray" Margin="-171,0,447,0" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <StackPanel x:Name="stackPanel">
                    <StackPanel.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </StackPanel.RenderTransform>
                    <CheckBox>This is a setting</CheckBox>
                    <CheckBox>This is another setting</CheckBox>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>
